\2 {\[Svace\] Обнаружение ошибок доступа к буферу в программах на языке C/C++ с помощью статического анализа} {paper_static_buffer_2}

\paperblock {static_buffer_2}

\quote {2016+. И.~Дудина. Ещё не опубликована. См. \ref {#svace} {Svace}.}

\page {2} Есть методы обнаружения последовательности точек программы, прохождение по которым неминуемо приведёт к ошибке. \comment {Интересно.} \page {3} Буферы имеют константный размер (известный на момент компиляции), контракт не может запрещать пути, каждая функция считается точкой входа. \page {4} Ошибка \i {межпроцедурная}, если минимальный набор рёбер, приводящий к ней проходит более чем через одну функцию. \page {5} Ядро Svace проводит статическое символьное исполнение с объединением состояний.

\[В примере 1 не закрыта скобка у функции \m {findIdx}\]

\pages {14 pages}

*/

