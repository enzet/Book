\2 {[\ref {#svace} {Svace}] Внутрипроцедурный анализ для поиска ошибок на основе символьного выполнения} {paper_borodin_2019}

\paperblock {borodin_2019}

\page {1} Подходы\: \innerlist {{на основе абстрактного синтаксического дерева,} {межпроцедурный анализ с моделированием указываемых ячеек памяти,} {внутрипроцедурный анализ отдельных функций.}}
\page {2} Анализ \term {неконсервативен} (может выдавать некорректные результаты ради скорости или потребления памяти). Символьное выполнение осуществляется в топологическом порядке (\comment {что это?}). Точки слияния анализируются после всех состояний на входных рёбрах. Выделяются \abbr {ССК} {сильно связные компоненты}, для них производится несколько (\simplemath {\i {N}}) итераций цикла.
\page {3} \term {Символы языка} — переменные программы. \simplemath {\i {A}\sub {\i {i}}} — анализы, \simplemath {\i {C}\sub {\i {i}}} — детекторы. Запускаются для каждой вершины. Анализу доступны результаты анализов на входных рёбрах, но недоступны на выходных.
\page {4} \term {Идентификатор значения} — абстракция для обозначения разбиения значений переменных на классы эквивалентности (\comment {видимо, \term {символьная переменная}}). \term {Атрибуты} используются для описания свойств.
\page {13} Результаты анализов сохраняются в виде атрибутов. Атрибуты\: интервалы значений, блокировка мьютекса, интервал длины строки и т. д.

