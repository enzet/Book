\2 {Buffer Overflows: Anatomy of an Exploit} {paper_exploit}

\paperblock {exploit}

\page {4} \i {Flat memory model}: contiguous area of memory. Call stack is one of many memory structures on \ref {#x86} {x86} and other. \page {5} \abbr {SP} always points to the top. \page {6} \abbr {IP} is a instruction pointer (points to the address of the current instruction). \page {7} Two ways of taking control: \innerlist {{rewriting \abbr {IP} and} {rewriting \abbr {SEH} {structured exception handler}}}.

\page {12} Using buffer overflow you can rewrite boolean \m {isLoggedIn} and get access to the protected code part, not only create exploit. \page {15} \abbr {NOP} sled increase the catchment range of the shell-code.

\list
    {\abbr {NOP} sled,}
    {shell-code,}
    {repeated \abbr {NOP} address.}

